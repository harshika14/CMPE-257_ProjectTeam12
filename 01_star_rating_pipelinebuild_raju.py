# -*- coding: utf-8 -*-
"""01_star_rating_pipelinebuild_raju.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gZe7Uane3A-4rEmV-cUEIuT6wRISPLIX
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import nltk
from nltk.corpus import stopwords
from tqdm import tqdm
from tqdm import tqdm_notebook
import string
from collections import Counter
import itertools
from sklearn import metrics
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.svm import LinearSVC
from sklearn.pipeline import Pipeline, FeatureUnion
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,precision_score,recall_score,classification_report
import pickle

ca_restaurant_reviews=pd.read_csv("california_restaurants.csv")
ca_restaurant_reviews=ca_restaurant_reviews.reset_index(drop = True)

texts = []
stars = [ca_restaurant_reviews['review_stars'] for review in ca_restaurant_reviews]
pbar = tqdm(total=ca_restaurant_reviews.shape[0]+1)
for index, row in ca_restaurant_reviews.iterrows():
    texts.append(clean_text(row['text']))
    pbar.update(1)
pbar.close()

ca_restaurant_reviews.head(1)

type(texts[1])

texts = [ca_restaurant_reviews['text'] for review in ca_restaurant_reviews]

new_text=ca_restaurant_reviews['text'].values.tolist()

new_stars=ca_restaurant_reviews["review_stars"].values.tolist()

X_train, X_test, y_train, y_test = train_test_split(new_text, new_stars, test_size=0.15, random_state=42, shuffle =False)

training_pipe=Pipeline([("Vectorization",TfidfVectorizer()),("SVC",LinearSVC())])

training_pipe

y_train[0]

training_pipe.fit(X_train,y_train)

out=training_pipe.predict(['Worst Restaurant'])[0]

out

with open('svcpipe.pickle', 'wb') as f:
  pickle.dump(training_pipe, f)

with open('svcpipe.pickle', 'rb') as f:
  loadedpipe = pickle.load(f)

testing=loadedpipe.predict(["This is a good restaurant, but the service is average"])

testing[0]

